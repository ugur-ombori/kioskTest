# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/kiosk.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1400, 900)
        MainWindow.setMinimumSize(QtCore.QSize(3, 0))
        MainWindow.setStyleSheet("background-color: rgb(136, 138, 133);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, -20, 1000, 311))
        self.label.setMinimumSize(QtCore.QSize(1000, 311))
        self.label.setMaximumSize(QtCore.QSize(761, 311))
        self.label.setStyleSheet("background-color: rgba(191, 64, 64, 0);")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("ui/../resource/ombori_white4.png"))
        self.label.setObjectName("label")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(91, 351, 702, 498))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.TouchScreenTest_Button = QtWidgets.QPushButton(self.layoutWidget)
        self.TouchScreenTest_Button.setMinimumSize(QtCore.QSize(700, 100))
        self.TouchScreenTest_Button.setMaximumSize(QtCore.QSize(700, 100))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.TouchScreenTest_Button.setFont(font)
        self.TouchScreenTest_Button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.TouchScreenTest_Button.setObjectName("TouchScreenTest_Button")
        self.verticalLayout.addWidget(self.TouchScreenTest_Button)
        self.PrinterTest_button = QtWidgets.QPushButton(self.layoutWidget)
        self.PrinterTest_button.setMinimumSize(QtCore.QSize(700, 100))
        self.PrinterTest_button.setMaximumSize(QtCore.QSize(700, 100))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.PrinterTest_button.setFont(font)
        self.PrinterTest_button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.PrinterTest_button.setObjectName("PrinterTest_button")
        self.verticalLayout.addWidget(self.PrinterTest_button)
        self.networkTest_Button = QtWidgets.QPushButton(self.layoutWidget)
        self.networkTest_Button.setMinimumSize(QtCore.QSize(700, 100))
        self.networkTest_Button.setMaximumSize(QtCore.QSize(700, 100))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.networkTest_Button.setFont(font)
        self.networkTest_Button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.networkTest_Button.setObjectName("networkTest_Button")
        self.verticalLayout.addWidget(self.networkTest_Button)
        self.BarcodeScanner_button = QtWidgets.QPushButton(self.layoutWidget)
        self.BarcodeScanner_button.setMinimumSize(QtCore.QSize(700, 100))
        self.BarcodeScanner_button.setMaximumSize(QtCore.QSize(700, 100))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.BarcodeScanner_button.setFont(font)
        self.BarcodeScanner_button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.BarcodeScanner_button.setObjectName("BarcodeScanner_button")
        self.verticalLayout.addWidget(self.BarcodeScanner_button)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.poweroff_Button = QtWidgets.QPushButton(self.layoutWidget)
        self.poweroff_Button.setMinimumSize(QtCore.QSize(300, 70))
        self.poweroff_Button.setMaximumSize(QtCore.QSize(300, 70))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.poweroff_Button.setFont(font)
        self.poweroff_Button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.poweroff_Button.setObjectName("poweroff_Button")
        self.horizontalLayout.addWidget(self.poweroff_Button)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.exit_Button = QtWidgets.QPushButton(self.layoutWidget)
        self.exit_Button.setMinimumSize(QtCore.QSize(300, 70))
        self.exit_Button.setMaximumSize(QtCore.QSize(300, 70))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.exit_Button.setFont(font)
        self.exit_Button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.exit_Button.setObjectName("exit_Button")
        self.horizontalLayout.addWidget(self.exit_Button)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setGeometry(QtCore.QRect(800, 352, 276, 172))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.label_2 = QtWidgets.QLabel(self.splitter)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.widget = QtWidgets.QWidget(self.splitter)
        self.widget.setObjectName("widget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.rotate_left_button = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(70)
        sizePolicy.setVerticalStretch(100)
        sizePolicy.setHeightForWidth(self.rotate_left_button.sizePolicy().hasHeightForWidth())
        self.rotate_left_button.setSizePolicy(sizePolicy)
        self.rotate_left_button.setMinimumSize(QtCore.QSize(70, 100))
        self.rotate_left_button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.rotate_left_button.setObjectName("rotate_left_button")
        self.horizontalLayout_2.addWidget(self.rotate_left_button)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.rotate_up_button = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(100)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.rotate_up_button.sizePolicy().hasHeightForWidth())
        self.rotate_up_button.setSizePolicy(sizePolicy)
        self.rotate_up_button.setMinimumSize(QtCore.QSize(100, 50))
        self.rotate_up_button.setStyleSheet("background-color: rgb(46, 52, 54);\n"
"")
        self.rotate_up_button.setObjectName("rotate_up_button")
        self.verticalLayout_2.addWidget(self.rotate_up_button)
        self.rotate_down_button = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(100)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.rotate_down_button.sizePolicy().hasHeightForWidth())
        self.rotate_down_button.setSizePolicy(sizePolicy)
        self.rotate_down_button.setMinimumSize(QtCore.QSize(100, 50))
        self.rotate_down_button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.rotate_down_button.setObjectName("rotate_down_button")
        self.verticalLayout_2.addWidget(self.rotate_down_button)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.rotate_right_button = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(70)
        sizePolicy.setVerticalStretch(100)
        sizePolicy.setHeightForWidth(self.rotate_right_button.sizePolicy().hasHeightForWidth())
        self.rotate_right_button.setSizePolicy(sizePolicy)
        self.rotate_right_button.setMinimumSize(QtCore.QSize(70, 100))
        self.rotate_right_button.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.rotate_right_button.setObjectName("rotate_right_button")
        self.horizontalLayout_2.addWidget(self.rotate_right_button)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1400, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.TouchScreenTest_Button.setText(_translate("MainWindow", "Touch Screen \n"
"Test&&Calibrate"))
        self.PrinterTest_button.setText(_translate("MainWindow", "Printer Test"))
        self.networkTest_Button.setText(_translate("MainWindow", "Network Test"))
        self.BarcodeScanner_button.setText(_translate("MainWindow", "Barcode Scanner Test"))
        self.poweroff_Button.setText(_translate("MainWindow", "Poweroff for\n"
"GridOS"))
        self.exit_Button.setText(_translate("MainWindow", "Exit"))
        self.label_2.setText(_translate("MainWindow", "Screen Rotation"))
        self.rotate_left_button.setText(_translate("MainWindow", "Left"))
        self.rotate_up_button.setText(_translate("MainWindow", "Up"))
        self.rotate_down_button.setText(_translate("MainWindow", "Down"))
        self.rotate_right_button.setText(_translate("MainWindow", "Right"))
import resource_rc
